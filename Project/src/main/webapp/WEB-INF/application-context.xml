<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 특정 자바 패키지를 뒤져서 @Component가 붙은 클래스를 찾아, 그 클래스의 인스턴스를 생성한다. -->

	<context:component-scan base-package="test">
	<context:exclude-filter type="annotation" 
	expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 스프링 WebMVC 관련 애노테이션을 처리해주는 객체를 등록한다. 
	<mvc:annotation-driven/>

 Database 커넥션 관리 객체를 준비한다. Spring 문서에서 Data -->

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<context:property-placeholder location="/WEB-INF/jdbc.properties" />

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />

		<property name="mapperLocations" value="classpath*:sql/*Mapper.xml" />

		<!-- VO객체의 별명을 자동으로 만들기 위한 VO 클래스가 있는 패키지 정보를 등록 -->
		<property name="typeAliasesPackage" value="test.vo" />
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
  <property name="basePackage" value="test.dao" />
</bean>

  <bean id="txManager"
    class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />
  </bean>

</beans>